{"version":3,"sources":["","../../../testWitSources/filelayer/csv2geojson.js","../../../testWitSources/filelayer/leaflet.filelayer.js"],"names":[],"mappings":"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","file":"C:/Users/Marco/Documents/GitHub/repositoryForTest/out/testWitSources/filelayer/leaflet.filelayer.js","sourcesContent":[null,"!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self),o.csv2geojson=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar dsv = require('dsv'),\n    sexagesimal = require('sexagesimal');\n\nfunction isLat(f) { return !!f.match(/(Lat)(itude)?/gi); }\nfunction isLon(f) { return !!f.match(/(L)(on|ng)(gitude)?/i); }\n\nfunction keyCount(o) {\n    return (typeof o == 'object') ? Object.keys(o).length : 0;\n}\n\nfunction autoDelimiter(x) {\n    var delimiters = [',', '\\t', '|', ';', String.fromCharCode(30), String.fromCharCode(31)];//Modififed\n    var results = [];\n\n    delimiters.forEach(function(delimiter) {\n        var res = dsv(delimiter).parse(x);\n        if (res.length >= 1) {\n            var count = keyCount(res[0]);\n            for (var i = 0; i < res.length; i++) {\n                if (keyCount(res[i]) !== count) return;\n            }\n            results.push({\n                delimiter: delimiter,\n                arity: Object.keys(res[0]).length,\n            });\n        }\n    });\n\n    if (results.length) {\n        return results.sort(function(a, b) {\n            return b.arity - a.arity;\n        })[0].delimiter;\n    } else {\n        return null;\n    }\n}\n\nfunction auto(x) {\n    var delimiter = autoDelimiter(x);\n    if (!delimiter) return null;\n    return dsv(delimiter).parse(x);\n}\n\n/*Usage: csvString, { latfield: 'LATFIELDNAME',lonfield: 'LONFIELDNAME',delimiter: ','},\n function(err, data) {});*/\nfunction csv2geojson(x, options, callback) {\n\n    if (!callback) {\n        callback = options;\n        options = {};\n    }\n\n    options.delimiter = options.delimiter || ',';\n\n    var latfield = options.latfield || '',\n        lonfield = options.lonfield || '',\n        crs = options.crs || '';\n\n    var features = [],\n        featurecollection = { type: 'FeatureCollection', features: features };\n\n    if (crs !== '') {\n        featurecollection.crs = { type: 'name', properties: { name: crs } };\n    }\n\n    if (options.delimiter === 'auto' && typeof x == 'string') {\n        options.delimiter = autoDelimiter(x);\n        if (!options.delimiter) return callback({\n            type: 'Error',\n            message: 'Could not autodetect delimiter'\n        });\n    }\n\n    var parsed = (typeof x == 'string') ? dsv(options.delimiter).parse(x) : x;\n\n    if (!parsed.length) return callback(null, featurecollection);\n\n    if (!latfield || !lonfield) {\n        for (var f in parsed[0]) {\n            if (!latfield && isLat(f)) latfield = f;\n            if (!lonfield && isLon(f)) lonfield = f;\n        }\n        if (!latfield || !lonfield) {\n            var fields = [];\n            for (var k in parsed[0]) fields.push(k);\n            return callback({\n                type: 'Error',\n                message: 'Latitude and longitude fields not present',\n                data: parsed,\n                fields: fields\n            });\n        }\n    }\n\n    var errors = [];\n\n    for (var i = 0; i < parsed.length; i++) {\n        if (parsed[i][lonfield] !== undefined &&\n            parsed[i][lonfield] !== undefined) {\n\n            var lonk = parsed[i][lonfield],\n                latk = parsed[i][latfield],\n                lonf, latf,\n                a;\n\n            a = sexagesimal(lonk, 'EW');\n            if (a) lonk = a;\n            a = sexagesimal(latk, 'NS');\n            if (a) latk = a;\n\n            lonf = parseFloat(lonk);\n            latf = parseFloat(latk);\n\n            if (isNaN(lonf) ||\n                isNaN(latf)) {\n                errors.push({\n                    message: 'A row contained an invalid value for latitude or longitude',\n                    row: parsed[i]\n                });\n            } else {\n                if (!options.includeLatLon) {\n                    delete parsed[i][lonfield];\n                    delete parsed[i][latfield];\n                }\n\n                features.push({\n                    type: 'Feature',\n                    properties: parsed[i],\n                    geometry: {\n                        type: 'Point',\n                        coordinates: [\n                            parseFloat(lonf),\n                            parseFloat(latf)\n                        ]\n                    }\n                });\n            }\n        }\n    }\n\n    callback(errors.length ? errors: null, featurecollection);\n}\n\nfunction toLine(gj) {\n    var features = gj.features;\n    var line = {\n        type: 'Feature',\n        geometry: {\n            type: 'LineString',\n            coordinates: []\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        line.geometry.coordinates.push(features[i].geometry.coordinates);\n    }\n    line.properties = features[0].properties;\n    return {\n        type: 'FeatureCollection',\n        features: [line]\n    };\n}\n\nfunction toPolygon(gj) {\n    var features = gj.features;\n    var poly = {\n        type: 'Feature',\n        geometry: {\n            type: 'Polygon',\n            coordinates: [[]]\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        poly.geometry.coordinates[0].push(features[i].geometry.coordinates);\n    }\n    poly.properties = features[0].properties;\n    return {\n        type: 'FeatureCollection',\n        features: [poly]\n    };\n}\n\nmodule.exports = {\n    isLon: isLon,\n    isLat: isLat,\n    csv: dsv.csv.parse,\n    tsv: dsv.tsv.parse,\n    dsv: dsv,\n    auto: auto,\n    csv2geojson: csv2geojson,\n    toLine: toLine,\n    toPolygon: toPolygon\n};\n\n},{\"dsv\":2,\"sexagesimal\":3}],2:[function(require,module,exports){\n\n\nmodule.exports = new Function(\"dsv.version = \\\"0.0.3\\\";\\n\\ndsv.tsv = dsv(\\\"\\\\t\\\");\\ndsv.csv = dsv(\\\",\\\");\\n\\nfunction dsv(delimiter) {\\n  var dsv = {},\\n      reFormat = new RegExp(\\\"[\\\\\\\"\\\" + delimiter + \\\"\\\\n]\\\"),\\n      delimiterCode = delimiter.charCodeAt(0);\\n\\n  dsv.parse = function(text, f) {\\n    var o;\\n    return dsv.parseRows(text, function(row, i) {\\n      if (o) return o(row, i - 1);\\n      var a = new Function(\\\"d\\\", \\\"return {\\\" + row.map(function(name, i) {\\n        return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n      }).join(\\\",\\\") + \\\"}\\\");\\n      o = f ? function(row, i) { return f(a(row), i); } : a;\\n    });\\n  };\\n\\n  dsv.parseRows = function(text, f) {\\n    var EOL = {}, // sentinel value for end-of-line\\n        EOF = {}, // sentinel value for end-of-file\\n        rows = [], // output rows\\n        N = text.length,\\n        I = 0, // current character index\\n        n = 0, // the current line number\\n        t, // the current token\\n        eol; // is the current token followed by EOL?\\n\\n    function token() {\\n      if (I >= N) return EOF; // special case: end of file\\n      if (eol) return eol = false, EOL; // special case: end of line\\n\\n      // special case: quotes\\n      var j = I;\\n      if (text.charCodeAt(j) === 34) {\\n        var i = j;\\n        while (i++ < N) {\\n          if (text.charCodeAt(i) === 34) {\\n            if (text.charCodeAt(i + 1) !== 34) break;\\n            ++i;\\n          }\\n        }\\n        I = i + 2;\\n        var c = text.charCodeAt(i + 1);\\n        if (c === 13) {\\n          eol = true;\\n          if (text.charCodeAt(i + 2) === 10) ++I;\\n        } else if (c === 10) {\\n          eol = true;\\n        }\\n        return text.substring(j + 1, i).replace(/\\\"\\\"/g, \\\"\\\\\\\"\\\");\\n      }\\n\\n      // common case: find next delimiter or newline\\n      while (I < N) {\\n        var c = text.charCodeAt(I++), k = 1;\\n        if (c === 10) eol = true; // \\\\n\\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\\\r|\\\\r\\\\n\\n        else if (c !== delimiterCode) continue;\\n        return text.substring(j, I - k);\\n      }\\n\\n      // special case: last token before EOF\\n      return text.substring(j);\\n    }\\n\\n    while ((t = token()) !== EOF) {\\n      var a = [];\\n      while (t !== EOL && t !== EOF) {\\n        a.push(t);\\n        t = token();\\n      }\\n      if (f && !(a = f(a, n++))) continue;\\n      rows.push(a);\\n    }\\n\\n    return rows;\\n  };\\n\\n  dsv.format = function(rows) {\\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\\n    var fieldSet = {}, fields = [];\\n\\n    // Compute unique fields in order of discovery.\\n    rows.forEach(function(row) {\\n      for (var field in row) {\\n        if (!(field in fieldSet)) {\\n          fields.push(fieldSet[field] = field);\\n        }\\n      }\\n    });\\n\\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\\n      return fields.map(function(field) {\\n        return formatValue(row[field]);\\n      }).join(delimiter);\\n    })).join(\\\"\\\\n\\\");\\n  };\\n\\n  dsv.formatRows = function(rows) {\\n    return rows.map(formatRow).join(\\\"\\\\n\\\");\\n  };\\n\\n  function formatRow(row) {\\n    return row.map(formatValue).join(delimiter);\\n  }\\n\\n  function formatValue(text) {\\n    return reFormat.test(text) ? \\\"\\\\\\\"\\\" + text.replace(/\\\\\\\"/g, \\\"\\\\\\\"\\\\\\\"\\\") + \\\"\\\\\\\"\\\" : text;\\n  }\\n\\n  return dsv;\\n}\\n\" + \";return dsv\")();\n\n},{}],3:[function(require,module,exports){\nmodule.exports = element;\nmodule.exports.pair = pair;\nmodule.exports.format = format;\nmodule.exports.formatPair = formatPair;\n\nfunction element(x, dims) {\n    return search(x, dims).val;\n}\n\nfunction formatPair(x) {\n    return format(x.lat, 'lat') + ' ' + format(x.lon, 'lon');\n}\n\n// Is 0 North or South?\nfunction format(x, dim) {\n    var dirs = {\n            lat: ['N', 'S'],\n            lon: ['E', 'W']\n        }[dim] || '',\n        dir = dirs[x >= 0 ? 0 : 1],\n        abs = Math.abs(x),\n        whole = Math.floor(abs),\n        fraction = abs - whole,\n        fractionMinutes = fraction * 60,\n        minutes = Math.floor(fractionMinutes),\n        seconds = Math.floor((fractionMinutes - minutes) * 60);\n\n    return whole + '° ' +\n        (minutes ? minutes + \"' \" : '') +\n        (seconds ? seconds + '\" ' : '') + dir;\n}\n\nfunction search(x, dims, r) {\n    if (!dims) dims = 'NSEW';\n    if (typeof x !== 'string') return { val: null, regex: r };\n    r = r || /[\\s\\,]*([\\-|\\—|\\―]?[0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|\"|”|″) *)?([NSEW])?/gi;\n    var m = r.exec(x);\n    if (!m) return { val: null, regex: r };\n    else if (m[4] && dims.indexOf(m[4]) === -1) return { val: null, regex: r };\n    else return {\n        val: (((m[1]) ? parseFloat(m[1]) : 0) +\n            ((m[2] ? parseFloat(m[2]) / 60 : 0)) +\n            ((m[3] ? parseFloat(m[3]) / 3600 : 0))) *\n            ((m[4] && m[4] === 'S' || m[4] === 'W') ? -1 : 1),\n        regex: r,\n        raw: m[0],\n        dim: m[4]\n    };\n}\n\nfunction pair(x, dims) {\n    x = x.trim();\n    var one = search(x, dims);\n    if (one.val === null) return null;\n    var two = search(x, dims, one.regex);\n    if (two.val === null) return null;\n    // null if one/two are not contiguous.\n    if (one.raw + two.raw !== x) return null;\n    if (one.dim) return swapdim(one.val, two.val, one.dim);\n    else return [one.val, two.val];\n}\n\nfunction swapdim(a, b, dim) {\n    if (dim == 'N' || dim == 'S') return [a, b];\n    if (dim == 'W' || dim == 'E') return [b, a];\n}\n\n},{}]},{},[1])(1)\n});","/*\r\n * Load files *locally* (GeoJSON, KML, GPX) into the map\r\n * using the HTML5 File API.\r\n *\r\n * Requires Pavel Shramov's GPX.js\r\n * https://github.com/shramov/leaflet-plugins/blob/d74d67/layer/vector/GPX.js\r\n *\r\n * Requires Pavel mholt papaparse.js\r\n * https://github.com/mholt/PapaParse/blob/master/papaparse.js\r\n *\r\n * Requires gildas-lormeau zip.js and mbostock d3.js only if you want to try to load zip archive of GTFS .\r\n * https://gildas-lormeau.github.io/zip.js/ , https://github.com/mbostock/d3\r\n *\r\n *\r\n * //TODO try to avoid the use of papaparse in favor of d3\r\n * //TODO upgrade the gtfs zip draw on the map work oly if the 'shapes' file is present\r\n */\r\n\r\n\r\nimport * as csv2geojson from '../filelayer/csv2geojson.js'\r\n\r\n\r\nvar FileLoader = L.Class.extend({\r\n    includes: L.Mixin.Events,\r\n    options: {\r\n        layerOptions: {},\r\n        fileSizeLimit: 1024,\r\n        headers: true,             //if the first line of a csv file has headers (if false launch exception)\r\n\t\tlatitudeColumn: 'lat',     //the default field name for the latitude coordinates...\r\n\t\tlongitudeColumn: 'lng',    //the default field name for the longitude coordinates...\r\n        titleForSearch: 'title',   //for future integration with other functions...\r\n        titlesToInspect: [],       //if you want get only some specific field from csv files...\r\n                                   //TODO implement for XML files....\r\n        rootTag: {root: \"Root\", subRoot:\"Row\"},  //set the Json path to the collection of json object to inspect...\r\n                                                 //you can many subRoot e.g. '...,subRoot2:xxx,subRoot3:yyy'\r\n                                                 //or if you prefer set a Array e.g. [\"Root\",\"Row\"]\r\n\r\n        rdfLink: [],               //if you want merge the json object created from a rdf file you can specify the property of a link...\r\n        rdfAbout: 'rdf:about',     //the value for the property rdf:about of a rdf file...\r\n        rdfAboutLink: 'rdf:about', //the value for the property rdf:about for linking different classes of triple...\r\n\r\n        layer: new L.geoJson(),    //make the variable of the layer reachable from external function,\r\n                                   // can be a L.layerGroup or a L.Feautregroup or another L.GeoJson....\r\n        popupTable:false,          //if true all the information of the popup are pushed on a html table for a better view.\r\n                                   //if false is saved on a json object.\r\n        validateGeoJson: false     //if you want to validate the geojson with a ajax call...\r\n    },\r\n\r\n    initialize: function (map, options) {\r\n        this._map = map;\r\n        L.Util.setOptions(this, options);\r\n\r\n        this._parsers = {\r\n            'json': this._loadGeoJSON,\r\n            'geojson': this._loadGeoJSON,\r\n            'gpx': this._convertToGeoJSON,\r\n            'kml': this._convertToGeoJSON,\r\n            'csv': this._csvToGeoJSON,\r\n            'xml': this._XMLToGeoJSON,\r\n            'rdf': this._RDFToGeoJSON,\r\n            'input': this._gtfsToGeoJSON //TODO to upgrade\r\n        };\r\n    },\r\n\r\n    load: function (file /* File */) {\r\n\r\n        // Check file size\r\n        var fileSize;\r\n        if(typeof file == 'undefined') fileSize = 1024; //avoid a console error\r\n        else fileSize = (file.size / 1024).toFixed(4);\r\n\r\n        if (fileSize > this.options.fileSizeLimit) {\r\n            this.fire('data:error', {\r\n                error: new Error('File size exceeds limit (' + fileSize + ' > ' + this.options.fileSizeLimit + 'kb)')\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Check file extension\r\n        var ext = file.name.split('.').pop();\r\n        var parser = this._parsers[ext];\r\n        //Check if file is a document or a archive\r\n        if(ext  == \"zip\"){  //if is a archive\r\n            try {\r\n                this.fire('data:loading', {filename: file.name, format: ext});\r\n                this.fire('data:loaded', {filename: file.name, format: ext});\r\n            }\r\n            catch (err) {\r\n                this.fire('data:error', {error: err});\r\n            }\r\n            return this._gtfsZipToGEOJSON(file);\r\n        }else{\r\n            if (!parser) {  //if is a document\r\n                this.fire('data:error', {\r\n                    error: new Error('Unsupported file type ' + file.type + '(' + ext + ')')\r\n                });\r\n                return;\r\n            }\r\n            // Read selected file using HTML5 File API\r\n            var reader = new FileReader();\r\n            reader.onload = L.Util.bind(function (e) {\r\n                try {\r\n                    this.fire('data:loading', {filename: file.name, format: ext});\r\n                    var layer = parser.call(this, e.target.result, ext);\r\n                    this.fire('data:loaded', {layer: layer, filename: file.name, format: ext});\r\n                }\r\n                catch (err) {\r\n                    this.fire('data:error', {error: err});\r\n                }\r\n            }, this);\r\n            reader.readAsText(file);\r\n            return reader; //return the document\r\n        }\r\n    },\r\n\r\n    _loadGeoJSON: function (content) {\r\n        if (typeof content == 'string') {\r\n            content = JSON.parse(content);\r\n        }\r\n\r\n        var layer = this.options.layer;\r\n        if (layer.getLayers().length > 0) {\r\n            //there are other information to merge to the result....\r\n            layer.addLayer(new L.geoJson(content, this.options.layerOptions));\r\n\r\n        } else {\r\n            //console.error(\"load json:\"+JSON.stringify(content,undefined,2));\r\n            try {\r\n                layer = L.geoJson(content, this.options.layerOptions);\r\n            }catch(e){ console.error(e.message);}\r\n        }\r\n        if (layer.getLayers().length === 0) {\r\n            this.fire('data:error', {\r\n                error: new Error('GeoJSON has no valid layers.\\n' +\r\n                    'if you try to load a CSV/RDF/XML file make sure to have setted the corrected name of the columns')\r\n            });\r\n        }\r\n        if (this.options.addToMap) {\r\n            layer.addTo(this._map);\r\n            //map.addLayer(layer);\r\n        }\r\n        return  layer;\r\n    },\r\n\r\n    _convertToGeoJSON: function (content, format) {\r\n        // Format is either 'gpx' or 'kml'\r\n        if (typeof content == 'string') {\r\n            content = ( new window.DOMParser() ).parseFromString(content, \"text/xml\");\r\n        }\r\n        var geojson = toGeoJSON[format](content);\r\n        return this._loadGeoJSON(geojson);\r\n    },\r\n\r\n    _csvToGeoJSON: function(content){\r\n        try {\r\n            if (!this.options.headers) {\r\n                this.fire('data:error', {error: new Error('The file CSV must have the Headers')});\r\n            }\r\n            var json;\r\n            //Work with Papaparse.js\r\n            /*json = Papa.parse(content, {header: this.options.headers});\r\n            this._depth = json.data.length - 1;\r\n            if (this.options.titlesToInspect.length == 0)this._titles = json.meta.fields;\r\n            else this._titles = this.options.titlesToInspect;\r\n            delete json.errors;\r\n            delete json.meta;*/\r\n            alert(0);\r\n\r\n\r\n            alert(JSON.stringify(r,undefined,2));\r\n            alert(1);\r\n            json = {data:[]};\r\n            json.data = d3.csv.parse(content, function(data) {\r\n                alert(\"A\"+JSON.stringify(data,undefined,2)); //{ \"Country|Name|lat|lng|Altitude\": \"United States|New York City|40.7142691|-74.0059738|2.0\"}\r\n               var dataset = data.forEach(function(d) {\r\n                       alert(\"D\"+JSON.stringify(d,undefined,2));\r\n                       var array = [];\r\n                       for (var i = 0; i < Object.keys(d).length; i++) {\r\n                           alert(\"Key:\"+Object.keys(d)[i]+\",Value:\"+d[Object.keys(d)[i]]);\r\n                           array.push(d[Object.keys(d)[i]]);\r\n                       }\r\n                       return array;\r\n                   }\r\n               );\r\n            });\r\n            alert(\"E\"+JSON.stringify(json.data,undefined,2));\r\n            json = this._addFeatureToJson(json.data);\r\n            return this._loadGeoJSON(json);\r\n        }catch(e){\r\n            console.error(e.message);\r\n            this.fire('data:error', {error: e});\r\n        }\r\n    },\r\n\r\n    /*_getDelimiter: function(content){\r\n        this.options.delimiter = this.options.delimiter || ',';\r\n        if (this.options.delimiter === 'auto' && typeof x == 'string') {\r\n            var delimiters = [',', ';', '\\t', '|'];\r\n            var results = [];\r\n            delimiters.forEach(function(delimiter) {\r\n                var res = dsv(delimiter).parse(content);\r\n                if (res.length >= 1) {\r\n                    var count = this._keyCount(res[0]);\r\n                    for (var i = 0; i < res.length; i++) {\r\n                        if (this._keyCount(res[i]) !== count) return;\r\n                    }\r\n\r\n                    this.options.delimiter = delimiter;\r\n                    //arity: Object.keys(res[0]).length,\r\n\r\n                }\r\n            });\r\n\r\n            if (results.length) {\r\n                return results.sort(function(a, b) {\r\n                    return b.arity - a.arity;\r\n                })[0].delimiter;\r\n            } else {\r\n                return null;\r\n            }\r\n            if (!this.options.delimiter) return callback({\r\n                type: 'Error',\r\n                message: 'Could not autodetect delimiter'\r\n            });\r\n        }\r\n    },*/\r\n\r\n    _getDelimiter2: function(content){\r\n        var delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\r\n        var bestDelim, bestDelta, fieldCountPrevRow;\r\n\r\n        for (var i = 0; i < delimChoices.length; i++) {\r\n            var delim = delimChoices[i];\r\n            var delta = 0, avgFieldCount = 0;\r\n            fieldCountPrevRow = undefined;\r\n            alert(\"CONTENT\"+content);\r\n            for (var j = 0; j < content.length; j++)\r\n            {\r\n                alert(\"CONTENT\"+content[j]);\r\n                var fieldCount = content[j].length;\r\n                avgFieldCount += fieldCount;\r\n\r\n                if (typeof fieldCountPrevRow === 'undefined')\r\n                {\r\n                    fieldCountPrevRow = fieldCount;\r\n                    continue;\r\n                }\r\n                else if (fieldCount > 1)\r\n                {\r\n                    delta += Math.abs(fieldCount - fieldCountPrevRow);\r\n                    fieldCountPrevRow = fieldCount;\r\n                }\r\n            }\r\n\r\n            if (content.length > 0)avgFieldCount /= content.length;\r\n\r\n            if ((typeof bestDelta === 'undefined' || delta < bestDelta)\r\n                && avgFieldCount > 1.99)\r\n            {\r\n                bestDelta = delta;\r\n                bestDelim = delim;\r\n            }\r\n        }\r\n    },\r\n\r\n    _keyCount:function(o){\r\n        return (typeof o == 'object') ? Object.keys(o).length : 0;\r\n    },\r\n\r\n    _addFeatureToJson: function(json){\r\n        //be sure we have a json array of object of objects\r\n        if(json === null || typeof json === 'undefined' || Object.keys(json).length==0){\r\n            console.error(\"Be sure to add the feature geojson to a Array or a Object of objects.\");\r\n            return;\r\n        }\r\n        var titles = this._titles;\r\n        var columnLat =this.options.latitudeColumn;\r\n        var columnLng = this.options.longitudeColumn;\r\n        var popupTable = this.options.popupTable;\r\n        json = {\r\n            type: \"FeatureCollection\",\r\n            features: Object.keys(json).map(function (id) {\r\n                //id 0,1,2,3,4,5,.....\r\n                var obj = json[id];\r\n                if (obj === null || typeof obj === 'undefined' || id >= Object.keys(json).length - 1) {\r\n                    console.warn(\"Ignore line \", id, \" invalid data\");\r\n                    return;\r\n                } else {\r\n                    //if you not have setted a specific set of columns just get everything\r\n                    if (!titles.length > 0)titles = Object.keys(obj);\r\n\r\n                    return {\r\n                        type: 'Feature',\r\n                        properties: {\r\n                            id: id,\r\n                            //integration for search\r\n                            title: (function () {\r\n                                for (var search, i = 0; search = titles[i++];) {\r\n                                    if (titles[i] == search)  return obj[search];\r\n                                }\r\n                                return id;\r\n                            })(),\r\n                            popupContent: (function () {\r\n                                var content = '';\r\n                                if (popupTable) {\r\n                                    content = '<div class=\"popup-content\">' +\r\n                                        '<table class=\"table table-striped table-bordered table-condensed\">';\r\n                                }\r\n                                for (var title, i = 0; title = titles[i++];) {\r\n                                    try {\r\n                                        if(obj.hasOwnProperty(title)) {\r\n                                            if (popupTable) {\r\n                                                var href = '';\r\n                                                if (obj[title].indexOf('http') === 0) {\r\n                                                    href = '<a target=\"_blank\" href=\"' + obj[title] + '\">' + obj[title] + '</a>';\r\n                                                }\r\n                                                if (href.length > 0)content += '<tr><th>' + title + '</th><td>' + href + '</td></tr>';\r\n                                                else content += '<tr><th>' + title + '</th><td>' + obj[title] + '</td></tr>';\r\n                                            } else {\r\n                                                content[title] = obj[title];\r\n                                            }\r\n                                        }\r\n                                    } catch (e) {\r\n                                        console.warn(\r\n                                            \"Undefined field for the json:\"\r\n                                            +JSON.stringify(obj)+\",Title:\"+title+\"->\"+e.message);\r\n                                    }\r\n                                }//for\r\n                                if (popupTable)content += \"</table></div>\";\r\n                                return content;\r\n                            })()\r\n                        },\r\n                        geometry: {\r\n                            type: \"Point\",\r\n                            coordinates: (function () {\r\n                                //check now only the feature with correct coordinate\r\n                                var lng = obj[columnLng].toString();\r\n                                var lat = obj[columnLat].toString();\r\n                                try {\r\n                                    if (/[a-z]/.test(lng.toLowerCase()) || /[a-z]/.test(lat.toLowerCase()) ||\r\n                                        isNaN(lng) || isNaN(lat) || !isFinite(lng) || !isFinite(lat)) {\r\n                                        console.warn(\"Coords lnglat:[\" + lng + \",\" + lat + \"] ,id:\" + id);\r\n                                        return;\r\n                                    }else{\r\n                                        lng = parseFloat(obj[columnLng]);\r\n                                        lat = parseFloat(obj[columnLat]);\r\n                                        if (!(lng < 180 && lng > -180 && lat < 90 && lat > -90)) {\r\n                                            console.warn(\"Something wrong with the coordinates, ignore line\", id, \" invalid data\");\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                } catch (e) {\r\n                                    //try with the string\r\n                                    console.warn(\"Not valid coordinates avoid this line ->\" + \"Coords:\" + lng + \",\" + lat + \",id:\" + id);\r\n                                    return;\r\n                                }\r\n                                return [lng, lat];\r\n                            })()\r\n                        }\r\n                    };\r\n                }//if obj is not null\r\n            })\r\n        };\r\n        this._cleanJson(json);\r\n        if(this.options.validateGeoJson) {\r\n            ajax._validateGeoJson(json, function (message) {\r\n                ajax.processSuccess(message);\r\n            });\r\n            if (ajax.result.isCorrect)return json;\r\n            else console.error(\"The geo json generated is wrong:\" + JSON.stringify(ajax.result.response, undefined, 2));\r\n        }else return json;\r\n    },\r\n\r\n    _RDFToGeoJSON: function(content) {\r\n        try {\r\n            var xml = this._toXML(content);\r\n            var json = this._XMLToJSON(xml);\r\n\r\n            for (var i = 0; i < Object.keys(this.options.rootTag).length; i++) {\r\n                json = json[this.options.rootTag[Object.keys(this.options.rootTag)[i]]];\r\n            }\r\n\r\n            this._simplifyJson(json);\r\n            this._mergeRdfJson(this._root.data);\r\n            //Filter result, get all object with at least coordinates...\r\n            for (i = 0; i < this._root.data.length; i++) {\r\n                if (!(this._root.data[i].hasOwnProperty(this.options.latitudeColumn) &&\r\n                    this._root.data[i].hasOwnProperty(this.options.longitudeColumn))\r\n                ) {\r\n                    delete this._root.data[i];\r\n                }\r\n            }\r\n            this._depth = this._root.data.length;\r\n            json = this._addFeatureToJson(this._root.data);\r\n\r\n            return this._loadGeoJSON(json);\r\n        }catch(e){console.error(e.message);}\r\n    },\r\n\r\n    _toXML:function(content){\r\n        var xml;\r\n        try {\r\n            if(window.DOMParser){\r\n                xml = new DOMParser().parseFromString(content,\"text/xml\");\r\n            }\r\n            else{\r\n                try {\r\n                    xml = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                    xml.async = false;\r\n                    xml.validateOnParse = false;\r\n                    xml.resolveExternals = false;\r\n                    xml.loadXML(content);\r\n                } catch (e) {\r\n                    try {\r\n                        Document.prototype.loadXML = function (s) {\r\n                            var doc2 = (new DOMParser()).parseFromString(s, \"text/xml\");\r\n                            while (this.hasChildNodes()) {\r\n                                this.removeChild(this.lastChild);\r\n                            }\r\n                            for (var i = 0; i < doc2.childNodes.length; i++) {\r\n                                this.appendChild(this.importNode(doc2.childNodes[i], true));\r\n                            }\r\n                        };\r\n                        xml = document.implementation.createDocument('', '', null);\r\n                        xml.loadXML(content);\r\n                    } catch (e) {\r\n                        this.fire('data:error', {error: new Error(e.message)});\r\n                    }\r\n                }\r\n            }\r\n        }catch(e) {\r\n            throw new Error(e.message);\r\n        }\r\n        return xml;\r\n    },\r\n\r\n    _XMLToJSON:function (content) {\r\n        var attr,\r\n            child,\r\n            attrs = content.attributes,\r\n            children = content.childNodes,\r\n            key = content.nodeType,\r\n            json = {},\r\n            i = -1;\r\n        if (key == 1 && attrs.length) {\r\n            json[key = '@attributes'] = {};\r\n            while (attr = attrs.item(++i)) {\r\n                json[key][attr.nodeName] = attr.nodeValue;\r\n            }\r\n            i = -1;\r\n        } else if (key == 3) {\r\n            json = content.nodeValue;\r\n        }\r\n        while (child = children.item(++i)) {\r\n            key = child.nodeName;\r\n            if (json.hasOwnProperty(key)) {\r\n                if (json.toString.call(json[key]) != '[object Array]') {\r\n                    json[key] = [json[key]];\r\n                }\r\n                json[key].push(this._XMLToJSON(child));\r\n            }\r\n            else {\r\n                json[key] = this._XMLToJSON(child);\r\n            }\r\n        }\r\n        return json;\r\n    },\r\n\r\n    _XMLToGeoJSON: function(content){\r\n        var xml = this._toXML(content);\r\n        var json = this._XMLToJSON(xml);\r\n\r\n        for(var i = 0; i < Object.keys(this.options.rootTag).length; i++){\r\n            json = json[this.options.rootTag[Object.keys(this.options.rootTag)[i]]];\r\n        }\r\n\r\n        this._simplifyJson(json);\r\n\r\n        //Filter result, get all object with at least coordinates...\r\n        for(i = 0; i < this._root.data.length; i++){\r\n            if(!(this._root.data[i].hasOwnProperty(this.options.latitudeColumn) &&\r\n                this._root.data[i].hasOwnProperty(this.options.longitudeColumn))\r\n            ){\r\n                delete this._root.data[i];\r\n            }\r\n        }\r\n\r\n        this._depth = this._root.data.length;\r\n\r\n        json = this._addFeatureToJson(this._root.data);\r\n        return this._loadGeoJSON(json);\r\n    },\r\n\r\n    _simplifyJson: function(json){\r\n        if(!(Object.prototype.toString.call(json) === '[object Array]')){\r\n            this.fire('data:error', {\r\n                error: new Error('Try to simplify a not json array, please re-set your root tag path, ' +\r\n                    'e.g. xmlRootTag:[\"some\",\"pathTo\",\"Array\"], we need a json array')\r\n            });\r\n            return;\r\n        }\r\n        var root = {data: []};\r\n        for (var i = 0; i < Object.keys(json).length; i++) {  //406 object\r\n            var obj;\r\n            if (typeof  json[i] === 'undefined')break; //read all\r\n            else  obj = json[i];\r\n            var info = {};\r\n            try {\r\n                var elements;\r\n                if(Object.keys(obj).length > 1) elements = Object.keys(obj).toString().split(\",\");\r\n                else elements = Object.keys(obj).toString();\r\n                for(var element, k=0; element = elements[k++];){\r\n                //for (var ele in elements) {\r\n                    //var element = elements[ele]; //@attributes\r\n                    var key, value;\r\n                    if (element.toString() == \"#text\") {\r\n                        if (Object.prototype.toString.call(obj[element]) === '[object Array]') {\r\n                            //key = element;\r\n                            //value = obj[element][\"#text\"];\r\n                            continue;\r\n                        }else {\r\n                            key = element;\r\n                            value = obj[element][\"#text\"];\r\n                        }\r\n                    }\r\n                    else if (element.toString() == \"@attributes\") {\r\n                        key = Object.keys(obj[element]);//rdf:\r\n                        value = obj[element][key].toString();\r\n                    }else{\r\n                        key = element;\r\n                        value = Object.keys(obj[element]).toString();\r\n                        if (value == \"@attributes\") {\r\n                            value = obj[element][\"@attributes\"][Object.keys(obj[element][\"@attributes\"])];\r\n                        } else if (value == \"#text\") {\r\n                            value = obj[element][\"#text\"];\r\n                        } else if (value == \"@attributes,#text\") {\r\n                            value = obj[element][\"#text\"];\r\n                            info[key] = value;\r\n                            key = Object.keys(obj[element][\"@attributes\"]);\r\n                            value = obj[element][\"@attributes\"][Object.keys(obj[element][\"@attributes\"])];\r\n                            //info[key] = value;\r\n                        }\r\n                        else {\r\n                            //never run here.....\r\n                            this.fire('data:error', {\r\n                                error: new Error('this stage can\\'t be reach from the simplification of the json \\n' +\r\n                                    'maybe the function need a update')\r\n                            });\r\n                            return;\r\n                        }\r\n                    }\r\n                    info[key] = value;\r\n                }\r\n                root.data.push(info);\r\n            }catch(e){\r\n                console.error(e.message);\r\n                this.fire('data:error', {\r\n                    error: new Error('Some error occurred during the simplification of the Json:'+ e.message+'1\\n')\r\n                });\r\n                return;\r\n            }\r\n           this._root = root;\r\n        }//for every object on rdf description\r\n    },\r\n\r\n    _mergeRdfJson: function(json){\r\n        try {\r\n            var link = '';\r\n            var mJson = [];\r\n            var xJson;\r\n\r\n            for (var i = 0; i < Object.keys(json).length; i++) {\r\n                for (var k = 0; k < Object.keys(this.options.rdfLink).length; k++) {\r\n                    if (json[i].hasOwnProperty(this.options.rdfLink[Object.keys(this.options.rdfLink)[k]])) {\r\n                        link = json[i][this.options.rdfLink[k]];\r\n                        mJson.push(this._searchJsonByKeyAndValue(json, this.options.rdfAboutLink, link));\r\n                    }\r\n                }\r\n            }\r\n            //clean and merge json object with link relations....\r\n            for (i = 0; i < Object.keys(json).length; i++) {\r\n                if (mJson[i] != null && json[i]!=null) {\r\n                     xJson = this._mergeJson(json[i], mJson[i]);\r\n                     json.push(xJson);\r\n                    delete json[json[i]];\r\n                    delete json[mJson[i]];\r\n                }\r\n            }\r\n        }catch(e){\r\n            this.fire('data:error', {\r\n                error: new Error('Some error occurred during the simplification of the Json:'+ e.message)\r\n            });\r\n        }\r\n        this._root.data = json;\r\n    },\r\n\r\n    _searchJsonByKeyAndValue: function(json,key,value){\r\n        for (var i = 0; i < json.length; i++) {\r\n            try {\r\n                if (json[i].hasOwnProperty(key)) {\r\n                    if (json[i][key] == value) {\r\n                        return json[i];\r\n                    }\r\n                }\r\n            }catch(e){\r\n                console.warn(e.message);\r\n            }\r\n        }\r\n    },\r\n\r\n    _mergeJson: function(json1,json2){\r\n        for(var key in json2)\r\n            if(json2.hasOwnProperty(key))\r\n                json1[key] = json2[key];\r\n        return json1;\r\n    },\r\n\r\n    _removeNullJson: function(json){\r\n        // Compact arrays with null entries; delete keys from objects with null value\r\n        var isArray = json instanceof Array;\r\n        for (var k in json){ //type,properties,..,title,popupContent,features,..\r\n            if (json[k]==null || typeof json[k] === 'undefined') isArray ? json.splice(k,1) : delete json[k];\r\n            else if (typeof json[k]==\"object\") this._removeNullJson(json[k]);\r\n        }\r\n    },\r\n\r\n    _cleanJson: function(json){\r\n        this._removeNullJson(json);\r\n        var i = json.features.length;\r\n        while(i--){\r\n            if( typeof json.features[i] === 'undefined' || !json.features[i].geometry.hasOwnProperty(\"coordinates\")){\r\n                json.features.splice(i,1);\r\n            }\r\n        }\r\n    },\r\n\r\n    _gtfsToGeoJSON: function(content){\r\n        var shapes = Papa.parse(content, {header: this.options.headers});\r\n        shapes = shapes.data;\r\n        var lookup = {};\r\n        var dintintShape = [];\r\n        for (var item, i = 0; item = shapes[i++];) {\r\n            var name = item.shape_id;\r\n            if (!(name in lookup)) {\r\n                lookup[name] = 1;\r\n                if(name.length >0)dintintShape.push(name);\r\n            }\r\n        }\r\n        var json = {};\r\n        for(item, i = 0; item = dintintShape[i++];){\r\n            if(item.length >0 && item !='') { //avoid null object\r\n                json[item] = [];\r\n                for (var k = 0; k < Object.keys(shapes).length; k++) {\r\n                    if(shapes[k].shape_id == item)json[item].push(shapes[k]);\r\n                }\r\n            }\r\n        }\r\n        json = {\r\n            type: 'FeatureCollection',\r\n            features: Object.keys(json).map(function (id) {\r\n                return {\r\n                    type: 'Feature',\r\n                    id: id,\r\n                    properties: {\r\n                        shape_id: id\r\n                    },\r\n                    geometry: {\r\n                        type: \"GeometryCollection\",\r\n                        geometries: [\r\n                            {\r\n                                type: \"MultiPoint\",\r\n                                coordinates: (function() {\r\n                                    var coords =[];\r\n                                    for(var s =0; s < Object.keys(json[id]).length; s++){\r\n                                        coords.push([\r\n                                            parseFloat(json[id][s].shape_pt_lon),\r\n                                            parseFloat(json[id][s].shape_pt_lat)\r\n                                        ]);\r\n                                    }\r\n                                    return coords;\r\n                                })()\r\n                            },\r\n                            {\r\n                                type: \"LineString\",\r\n                                coordinates: json[id].sort(function (a, b) {\r\n                                    return +a.shape_pt_sequence - b.shape_pt_sequence;\r\n                                }).map(function (coord) {\r\n                                    return [\r\n                                        parseFloat(coord.shape_pt_lon),\r\n                                        parseFloat(coord.shape_pt_lat)\r\n                                    ];\r\n                                })\r\n                            }\r\n                        ]\r\n                    }\r\n                };\r\n            })\r\n        };\r\n        return this._loadGeoJSON(json);\r\n    },\r\n\r\n    /* ty to kaezarrex () for the code :)*/\r\n    _gtfsZipToGEOJSON: function(file){\r\n        parseGtfs(file, {\r\n            'shapes.txt': load_shapes\r\n            //'stops.txt': load_stops\r\n        });\r\n    },\r\n\r\n\r\n    /*  future integration with ajax call */\r\n    _depth: 0,\r\n    _titles: [],\r\n    _root:{}\r\n\r\n    });\r\n\r\n\r\nL.Control.FileLayerLoad = L.Control.extend({\r\n    statics: {\r\n        TITLE: 'Load local file (GPX, KML, GeoJSON, CSV, RDF, XML)',\r\n        LABEL: '&#8965;'\r\n    },\r\n    options: {\r\n        position: 'topleft',\r\n        fitBounds: true,\r\n        layerOptions: {},\r\n        addToMap: true,\r\n        fileSizeLimit: 1024\r\n    },\r\n\r\n    initialize: function (options) {\r\n        L.Util.setOptions(this, options);\r\n        this.loader = null;\r\n    },\r\n\r\n    onAdd: function (map) {\r\n        this.loader = new FileLoader(map, this.options);\r\n\r\n        this.loader.on('data:loaded', function (e) {\r\n            // Fit bounds after loading\r\n            if (this.options.fitBounds) {\r\n                window.setTimeout(function () {\r\n                    map.fitBounds(e.layer.getBounds());\r\n                }, 500);\r\n            }\r\n        }, this);\r\n\r\n        // Initialize Drag-and-drop\r\n        this._initDragAndDrop(map);\r\n\r\n        // Initialize map control\r\n        return this._initContainer();\r\n    },\r\n\r\n    _initDragAndDrop: function (map) {\r\n        var fileLoader = this.loader,\r\n            dropbox = map._container;\r\n\r\n        var callbacks = {\r\n            dragenter: function () {\r\n                map.scrollWheelZoom.disable();\r\n            },\r\n            dragleave: function () {\r\n                map.scrollWheelZoom.enable();\r\n            },\r\n            dragover: function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            },\r\n            drop: function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                var files = Array.prototype.slice.apply(e.dataTransfer.files),\r\n                    i = files.length;\r\n                setTimeout(function(){\r\n                    fileLoader.load(files.shift());\r\n                    if (files.length > 0) {\r\n                        setTimeout(arguments.callee, 25);\r\n                    }\r\n                }, 25);\r\n                map.scrollWheelZoom.enable();\r\n            }\r\n        };\r\n        for (var name in callbacks)\r\n            dropbox.addEventListener(name, callbacks[name], false);\r\n    },\r\n\r\n    _initContainer: function () {\r\n        // Create a button, and bind click on hidden file input\r\n        var zoomName = 'leaflet-control-filelayer leaflet-control-zoom',\r\n            barName = 'leaflet-bar',\r\n            partName = barName + '-part',\r\n            container = L.DomUtil.create('div', zoomName + ' ' + barName);\r\n        var link = L.DomUtil.create('a', zoomName + '-in ' + partName, container);\r\n        link.innerHTML = L.Control.FileLayerLoad.LABEL;\r\n        link.href = '#';\r\n        link.title = L.Control.FileLayerLoad.TITLE;\r\n\r\n        // Create an invisible file input\r\n        var fileInput = L.DomUtil.create('input', 'hidden', container);\r\n        fileInput.type = 'file';\r\n        if (!this.options.formats) {\r\n            fileInput.accept = '.gpx,.kml,.json,.geojson,.csv,.rdf,.xml,.input,.zip';\r\n        } else {\r\n            fileInput.accept = this.options.formats.join(',');\r\n        }\r\n        fileInput.style.display = 'none';\r\n        // Load on file change\r\n        var fileLoader = this.loader;\r\n        fileInput.addEventListener(\"change\", function (e) {\r\n            fileLoader.load(this.files[0]);\r\n            // reset so that the user can upload the same file again if they want to\r\n            this.value = '';\r\n        }, false);\r\n\r\n        L.DomEvent.disableClickPropagation(link);\r\n        L.DomEvent.on(link, 'click', function (e) {\r\n            fileInput.click();\r\n            e.preventDefault();\r\n        });\r\n        return container;\r\n    }\r\n});\r\n\r\nL.Control.fileLayerLoad = function (options) {\r\n    return new L.Control.FileLayerLoad(options);\r\n};\r\n\r\n\r\n\r\n\r\n"]}