{"version":3,"sources":["csv2geojson.js"],"names":[],"mappings":"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","file":"csv2geojson-compiled.js","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self),o.csv2geojson=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar dsv = require('dsv'),\n    sexagesimal = require('sexagesimal');\n\nfunction isLat(f) { return !!f.match(/(Lat)(itude)?/gi); }\nfunction isLon(f) { return !!f.match(/(L)(on|ng)(gitude)?/i); }\n\nfunction keyCount(o) {\n    return (typeof o == 'object') ? Object.keys(o).length : 0;\n}\n\nfunction autoDelimiter(x) {\n    var delimiters = [',', '\\t', '|', ';', String.fromCharCode(30), String.fromCharCode(31)];//Modififed\n    var results = [];\n\n    delimiters.forEach(function(delimiter) {\n        var res = dsv(delimiter).parse(x);\n        if (res.length >= 1) {\n            var count = keyCount(res[0]);\n            for (var i = 0; i < res.length; i++) {\n                if (keyCount(res[i]) !== count) return;\n            }\n            results.push({\n                delimiter: delimiter,\n                arity: Object.keys(res[0]).length,\n            });\n        }\n    });\n\n    if (results.length) {\n        return results.sort(function(a, b) {\n            return b.arity - a.arity;\n        })[0].delimiter;\n    } else {\n        return null;\n    }\n}\n\nfunction auto(x) {\n    var delimiter = autoDelimiter(x);\n    if (!delimiter) return null;\n    return dsv(delimiter).parse(x);\n}\n\n/*Usage: csvString, { latfield: 'LATFIELDNAME',lonfield: 'LONFIELDNAME',delimiter: ','},\n function(err, data) {});*/\nfunction csv2geojson(x, options, callback) {\n\n    if (!callback) {\n        callback = options;\n        options = {};\n    }\n\n    options.delimiter = options.delimiter || ',';\n\n    var latfield = options.latfield || '',\n        lonfield = options.lonfield || '',\n        crs = options.crs || '';\n\n    var features = [],\n        featurecollection = { type: 'FeatureCollection', features: features };\n\n    if (crs !== '') {\n        featurecollection.crs = { type: 'name', properties: { name: crs } };\n    }\n\n    if (options.delimiter === 'auto' && typeof x == 'string') {\n        options.delimiter = autoDelimiter(x);\n        if (!options.delimiter) return callback({\n            type: 'Error',\n            message: 'Could not autodetect delimiter'\n        });\n    }\n\n    var parsed = (typeof x == 'string') ? dsv(options.delimiter).parse(x) : x;\n\n    if (!parsed.length) return callback(null, featurecollection);\n\n    if (!latfield || !lonfield) {\n        for (var f in parsed[0]) {\n            if (!latfield && isLat(f)) latfield = f;\n            if (!lonfield && isLon(f)) lonfield = f;\n        }\n        if (!latfield || !lonfield) {\n            var fields = [];\n            for (var k in parsed[0]) fields.push(k);\n            return callback({\n                type: 'Error',\n                message: 'Latitude and longitude fields not present',\n                data: parsed,\n                fields: fields\n            });\n        }\n    }\n\n    var errors = [];\n\n    for (var i = 0; i < parsed.length; i++) {\n        if (parsed[i][lonfield] !== undefined &&\n            parsed[i][lonfield] !== undefined) {\n\n            var lonk = parsed[i][lonfield],\n                latk = parsed[i][latfield],\n                lonf, latf,\n                a;\n\n            a = sexagesimal(lonk, 'EW');\n            if (a) lonk = a;\n            a = sexagesimal(latk, 'NS');\n            if (a) latk = a;\n\n            lonf = parseFloat(lonk);\n            latf = parseFloat(latk);\n\n            if (isNaN(lonf) ||\n                isNaN(latf)) {\n                errors.push({\n                    message: 'A row contained an invalid value for latitude or longitude',\n                    row: parsed[i]\n                });\n            } else {\n                if (!options.includeLatLon) {\n                    delete parsed[i][lonfield];\n                    delete parsed[i][latfield];\n                }\n\n                features.push({\n                    type: 'Feature',\n                    properties: parsed[i],\n                    geometry: {\n                        type: 'Point',\n                        coordinates: [\n                            parseFloat(lonf),\n                            parseFloat(latf)\n                        ]\n                    }\n                });\n            }\n        }\n    }\n\n    callback(errors.length ? errors: null, featurecollection);\n}\n\nfunction toLine(gj) {\n    var features = gj.features;\n    var line = {\n        type: 'Feature',\n        geometry: {\n            type: 'LineString',\n            coordinates: []\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        line.geometry.coordinates.push(features[i].geometry.coordinates);\n    }\n    line.properties = features[0].properties;\n    return {\n        type: 'FeatureCollection',\n        features: [line]\n    };\n}\n\nfunction toPolygon(gj) {\n    var features = gj.features;\n    var poly = {\n        type: 'Feature',\n        geometry: {\n            type: 'Polygon',\n            coordinates: [[]]\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        poly.geometry.coordinates[0].push(features[i].geometry.coordinates);\n    }\n    poly.properties = features[0].properties;\n    return {\n        type: 'FeatureCollection',\n        features: [poly]\n    };\n}\n\nmodule.exports = {\n    isLon: isLon,\n    isLat: isLat,\n    csv: dsv.csv.parse,\n    tsv: dsv.tsv.parse,\n    dsv: dsv,\n    auto: auto,\n    csv2geojson: csv2geojson,\n    toLine: toLine,\n    toPolygon: toPolygon\n};\n\n},{\"dsv\":2,\"sexagesimal\":3}],2:[function(require,module,exports){\n\n\nmodule.exports = new Function(\"dsv.version = \\\"0.0.3\\\";\\n\\ndsv.tsv = dsv(\\\"\\\\t\\\");\\ndsv.csv = dsv(\\\",\\\");\\n\\nfunction dsv(delimiter) {\\n  var dsv = {},\\n      reFormat = new RegExp(\\\"[\\\\\\\"\\\" + delimiter + \\\"\\\\n]\\\"),\\n      delimiterCode = delimiter.charCodeAt(0);\\n\\n  dsv.parse = function(text, f) {\\n    var o;\\n    return dsv.parseRows(text, function(row, i) {\\n      if (o) return o(row, i - 1);\\n      var a = new Function(\\\"d\\\", \\\"return {\\\" + row.map(function(name, i) {\\n        return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n      }).join(\\\",\\\") + \\\"}\\\");\\n      o = f ? function(row, i) { return f(a(row), i); } : a;\\n    });\\n  };\\n\\n  dsv.parseRows = function(text, f) {\\n    var EOL = {}, // sentinel value for end-of-line\\n        EOF = {}, // sentinel value for end-of-file\\n        rows = [], // output rows\\n        N = text.length,\\n        I = 0, // current character index\\n        n = 0, // the current line number\\n        t, // the current token\\n        eol; // is the current token followed by EOL?\\n\\n    function token() {\\n      if (I >= N) return EOF; // special case: end of file\\n      if (eol) return eol = false, EOL; // special case: end of line\\n\\n      // special case: quotes\\n      var j = I;\\n      if (text.charCodeAt(j) === 34) {\\n        var i = j;\\n        while (i++ < N) {\\n          if (text.charCodeAt(i) === 34) {\\n            if (text.charCodeAt(i + 1) !== 34) break;\\n            ++i;\\n          }\\n        }\\n        I = i + 2;\\n        var c = text.charCodeAt(i + 1);\\n        if (c === 13) {\\n          eol = true;\\n          if (text.charCodeAt(i + 2) === 10) ++I;\\n        } else if (c === 10) {\\n          eol = true;\\n        }\\n        return text.substring(j + 1, i).replace(/\\\"\\\"/g, \\\"\\\\\\\"\\\");\\n      }\\n\\n      // common case: find next delimiter or newline\\n      while (I < N) {\\n        var c = text.charCodeAt(I++), k = 1;\\n        if (c === 10) eol = true; // \\\\n\\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\\\r|\\\\r\\\\n\\n        else if (c !== delimiterCode) continue;\\n        return text.substring(j, I - k);\\n      }\\n\\n      // special case: last token before EOF\\n      return text.substring(j);\\n    }\\n\\n    while ((t = token()) !== EOF) {\\n      var a = [];\\n      while (t !== EOL && t !== EOF) {\\n        a.push(t);\\n        t = token();\\n      }\\n      if (f && !(a = f(a, n++))) continue;\\n      rows.push(a);\\n    }\\n\\n    return rows;\\n  };\\n\\n  dsv.format = function(rows) {\\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\\n    var fieldSet = {}, fields = [];\\n\\n    // Compute unique fields in order of discovery.\\n    rows.forEach(function(row) {\\n      for (var field in row) {\\n        if (!(field in fieldSet)) {\\n          fields.push(fieldSet[field] = field);\\n        }\\n      }\\n    });\\n\\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\\n      return fields.map(function(field) {\\n        return formatValue(row[field]);\\n      }).join(delimiter);\\n    })).join(\\\"\\\\n\\\");\\n  };\\n\\n  dsv.formatRows = function(rows) {\\n    return rows.map(formatRow).join(\\\"\\\\n\\\");\\n  };\\n\\n  function formatRow(row) {\\n    return row.map(formatValue).join(delimiter);\\n  }\\n\\n  function formatValue(text) {\\n    return reFormat.test(text) ? \\\"\\\\\\\"\\\" + text.replace(/\\\\\\\"/g, \\\"\\\\\\\"\\\\\\\"\\\") + \\\"\\\\\\\"\\\" : text;\\n  }\\n\\n  return dsv;\\n}\\n\" + \";return dsv\")();\n\n},{}],3:[function(require,module,exports){\nmodule.exports = element;\nmodule.exports.pair = pair;\nmodule.exports.format = format;\nmodule.exports.formatPair = formatPair;\n\nfunction element(x, dims) {\n    return search(x, dims).val;\n}\n\nfunction formatPair(x) {\n    return format(x.lat, 'lat') + ' ' + format(x.lon, 'lon');\n}\n\n// Is 0 North or South?\nfunction format(x, dim) {\n    var dirs = {\n            lat: ['N', 'S'],\n            lon: ['E', 'W']\n        }[dim] || '',\n        dir = dirs[x >= 0 ? 0 : 1],\n        abs = Math.abs(x),\n        whole = Math.floor(abs),\n        fraction = abs - whole,\n        fractionMinutes = fraction * 60,\n        minutes = Math.floor(fractionMinutes),\n        seconds = Math.floor((fractionMinutes - minutes) * 60);\n\n    return whole + '° ' +\n        (minutes ? minutes + \"' \" : '') +\n        (seconds ? seconds + '\" ' : '') + dir;\n}\n\nfunction search(x, dims, r) {\n    if (!dims) dims = 'NSEW';\n    if (typeof x !== 'string') return { val: null, regex: r };\n    r = r || /[\\s\\,]*([\\-|\\—|\\―]?[0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|\"|”|″) *)?([NSEW])?/gi;\n    var m = r.exec(x);\n    if (!m) return { val: null, regex: r };\n    else if (m[4] && dims.indexOf(m[4]) === -1) return { val: null, regex: r };\n    else return {\n        val: (((m[1]) ? parseFloat(m[1]) : 0) +\n            ((m[2] ? parseFloat(m[2]) / 60 : 0)) +\n            ((m[3] ? parseFloat(m[3]) / 3600 : 0))) *\n            ((m[4] && m[4] === 'S' || m[4] === 'W') ? -1 : 1),\n        regex: r,\n        raw: m[0],\n        dim: m[4]\n    };\n}\n\nfunction pair(x, dims) {\n    x = x.trim();\n    var one = search(x, dims);\n    if (one.val === null) return null;\n    var two = search(x, dims, one.regex);\n    if (two.val === null) return null;\n    // null if one/two are not contiguous.\n    if (one.raw + two.raw !== x) return null;\n    if (one.dim) return swapdim(one.val, two.val, one.dim);\n    else return [one.val, two.val];\n}\n\nfunction swapdim(a, b, dim) {\n    if (dim == 'N' || dim == 'S') return [a, b];\n    if (dim == 'W' || dim == 'E') return [b, a];\n}\n\n},{}]},{},[1])(1)\n});\n\nexport function myCsv2geojson(x,options,callback) {\n    return csv2geojson(x, options, callback);\n}\n\n"]}